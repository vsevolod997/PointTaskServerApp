// <auto-generated />
using System;
using ClientApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientApp.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20190605145158_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientApp.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Photo1");

                    b.Property<string>("Photo2");

                    b.Property<string>("Photo3");

                    b.Property<int>("TaskId");

                    b.Property<string>("Text");

                    b.Property<DateTime>("TimeComment");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ClientApp.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Information");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Picture");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ClientApp.Models.Dialog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FirstSee");

                    b.Property<int>("FirstUserId");

                    b.Property<bool>("Main");

                    b.Property<bool>("SecondSee");

                    b.Property<int>("SecondUserId");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Dialogs");
                });

            modelBuilder.Entity("ClientApp.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.Property<string>("URLstrng");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ClientApp.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DialogId");

                    b.Property<int>("InputId");

                    b.Property<bool>("IsRead");

                    b.Property<bool>("IsVisibleScond");

                    b.Property<bool>("IsVisibleSecond");

                    b.Property<DateTime>("MessageDate");

                    b.Property<int>("OutputId");

                    b.Property<string>("Photo");

                    b.Property<string>("Photo2");

                    b.Property<string>("Photo3");

                    b.Property<string>("Text");

                    b.Property<string>("Theme");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DialogId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ClientApp.Models.TasksUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllText");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<bool>("Main");

                    b.Property<int>("PutId");

                    b.Property<int>("ResponId");

                    b.Property<string>("Status");

                    b.Property<string>("Text");

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime?>("TimeEndFact");

                    b.Property<bool>("TimeFail");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("URLimage");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TasksUsers");
                });

            modelBuilder.Entity("ClientApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("Family");

                    b.Property<string>("Login");

                    b.Property<string>("NameOth");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Photo");

                    b.Property<string>("Post");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClientApp.Models.Comment", b =>
                {
                    b.HasOne("ClientApp.Models.TasksUser", "TasksUsers")
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClientApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClientApp.Models.Dialog", b =>
                {
                    b.HasOne("ClientApp.Models.User", "Users")
                        .WithMany("Dialogs")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("ClientApp.Models.Document", b =>
                {
                    b.HasOne("ClientApp.Models.Company", "Company")
                        .WithMany("Documents")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClientApp.Models.Message", b =>
                {
                    b.HasOne("ClientApp.Models.Dialog", "Dialog")
                        .WithMany("Messages")
                        .HasForeignKey("DialogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClientApp.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ClientApp.Models.TasksUser", b =>
                {
                    b.HasOne("ClientApp.Models.User", "User")
                        .WithMany("TasksUsers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ClientApp.Models.User", b =>
                {
                    b.HasOne("ClientApp.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
